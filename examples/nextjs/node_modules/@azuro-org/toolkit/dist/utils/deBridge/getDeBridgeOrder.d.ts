import { type Hex } from 'viem';
export declare enum DeBridgeOrderStatus {
    None = "None",
    Created = "Created",
    Fulfilled = "Fulfilled",
    SentUnlock = "SentUnlock",
    OrderCancelled = "OrderCancelled",
    SentOrderCancel = "SentOrderCancel",
    ClaimedUnlock = "ClaimedUnlock",
    ClaimedOrderCancel = "ClaimedOrderCancel"
}
export declare enum DeBridgeExternalCallStatus {
    NoExtCall = "NoExtCall",
    AwaitingOrderFulfillment = "AwaitingOrderFulfillment",
    AwaitingExecution = "AwaitingExecution",
    Executing = "Executing",
    Completed = "Completed",
    Failed = "Failed",
    Cancelled = "Cancelled"
}
type OrderStatusResponse = {
    orderId: {
        stringValue: Hex;
    };
    fulfilledDstEventMetadata: {
        transactionHash: {
            stringValue: Hex;
        };
    } | null;
    state: DeBridgeOrderStatus;
    externalCallState: DeBridgeExternalCallStatus;
    takeOfferWithMetadata: {
        chainId: {
            bigIntegerValue: number;
        };
    };
};
export declare const getDeBridgeOrder: (orderId: Hex) => Promise<OrderStatusResponse | null>;
export {};
