import { type Chain } from 'viem/chains';
import { type Address } from 'viem';
import { Environment } from './envs';
import { type Contracts } from './utils/setupContracts';
export declare const ODDS_DECIMALS = 12;
export declare const MARGIN_DECIMALS = 12;
export declare const MIN_LIVE_BET_AMOUNT = 1;
export declare const deBridgeUrl = "https://api.dln.trade/v1.0";
export declare const deBridgeTxUrl = "https://stats-api.dln.trade/api";
export declare const liveHostAddress = "0x67Fca88E2f5F2C33b86bFa4EccfCb8dCD6a56D17";
export declare const liveSupportedChains: ChainId[];
type BetToken = {
    address: Address;
    symbol: string;
    decimals: number;
};
export type ChainData = {
    chain: Omit<Chain, 'id'> & {
        id: ChainId;
    };
    graphql: {
        prematch: string;
        live: string;
    };
    socket: string;
    api: string;
    environment: Environment;
    contracts: Contracts;
    betToken: BetToken;
};
export declare const chainsData: {
    100: ChainData;
    137: ChainData;
    80002: ChainData;
    88888: ChainData;
    88882: ChainData;
};
export declare const chainsDataByEnv: Record<Environment, ChainData>;
export type ChainId = keyof typeof chainsData;
export {};
