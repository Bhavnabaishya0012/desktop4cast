export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<T extends {
    [key: string]: unknown;
}, K extends keyof T> = {
    [_ in K]?: never;
};
export type Incremental<T> = T | {
    [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
    ID: {
        input: string;
        output: string;
    };
    String: {
        input: string;
        output: string;
    };
    Boolean: {
        input: boolean;
        output: boolean;
    };
    Int: {
        input: number;
        output: number;
    };
    Float: {
        input: number;
        output: number;
    };
    BigDecimal: {
        input: any;
        output: any;
    };
    BigInt: {
        input: any;
        output: any;
    };
    Bytes: {
        input: any;
        output: any;
    };
    Int8: {
        input: any;
        output: any;
    };
};
export type BlockChangedFilter = {
    number_gte: Scalars['Int']['input'];
};
export type Block_Height = {
    hash?: InputMaybe<Scalars['Bytes']['input']>;
    number?: InputMaybe<Scalars['Int']['input']>;
    number_gte?: InputMaybe<Scalars['Int']['input']>;
};
export type Condition = {
    __typename?: 'Condition';
    _updatedAt: Scalars['BigInt']['output'];
    _winningOutcomesCount: Scalars['Int']['output'];
    conditionId: Scalars['BigInt']['output'];
    createdBlockNumber: Scalars['BigInt']['output'];
    createdBlockTimestamp: Scalars['BigInt']['output'];
    createdTxHash: Scalars['String']['output'];
    game: Game;
    /** Condition Id */
    id: Scalars['ID']['output'];
    internalStartsAt?: Maybe<Scalars['BigInt']['output']>;
    outcomes: Array<Outcome>;
    outcomesIds?: Maybe<Array<Scalars['BigInt']['output']>>;
    provider: Scalars['BigInt']['output'];
    resolvedBlockNumber?: Maybe<Scalars['BigInt']['output']>;
    resolvedBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
    resolvedTxHash?: Maybe<Scalars['String']['output']>;
    status: ConditionStatus;
    title?: Maybe<Scalars['String']['output']>;
    turnover: Scalars['BigInt']['output'];
    wonOutcomeIds?: Maybe<Array<Scalars['BigInt']['output']>>;
    wonOutcomes?: Maybe<Array<Outcome>>;
};
export type ConditionOutcomesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Outcome_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Outcome_Filter>;
};
export type ConditionWonOutcomesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Outcome_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Outcome_Filter>;
};
export declare enum ConditionStatus {
    Canceled = "Canceled",
    Created = "Created",
    Paused = "Paused",
    Resolved = "Resolved"
}
export type Condition_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    _updatedAt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    _updatedAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    _winningOutcomesCount?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_gt?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_gte?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
    _winningOutcomesCount_lt?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_lte?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_not?: InputMaybe<Scalars['Int']['input']>;
    _winningOutcomesCount_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;
    and?: InputMaybe<Array<InputMaybe<Condition_Filter>>>;
    conditionId?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_gt?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_gte?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    conditionId_lt?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_lte?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_not?: InputMaybe<Scalars['BigInt']['input']>;
    conditionId_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdTxHash?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    createdTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    createdTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game?: InputMaybe<Scalars['String']['input']>;
    game_?: InputMaybe<Game_Filter>;
    game_contains?: InputMaybe<Scalars['String']['input']>;
    game_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    game_ends_with?: InputMaybe<Scalars['String']['input']>;
    game_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_gt?: InputMaybe<Scalars['String']['input']>;
    game_gte?: InputMaybe<Scalars['String']['input']>;
    game_in?: InputMaybe<Array<Scalars['String']['input']>>;
    game_lt?: InputMaybe<Scalars['String']['input']>;
    game_lte?: InputMaybe<Scalars['String']['input']>;
    game_not?: InputMaybe<Scalars['String']['input']>;
    game_not_contains?: InputMaybe<Scalars['String']['input']>;
    game_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    game_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    game_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    game_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    game_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_starts_with?: InputMaybe<Scalars['String']['input']>;
    game_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    internalStartsAt?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    internalStartsAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_not?: InputMaybe<Scalars['BigInt']['input']>;
    internalStartsAt_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    or?: InputMaybe<Array<InputMaybe<Condition_Filter>>>;
    outcomesIds?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomesIds_contains?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomesIds_contains_nocase?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomesIds_not?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomesIds_not_contains?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomesIds_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomes_?: InputMaybe<Outcome_Filter>;
    provider?: InputMaybe<Scalars['BigInt']['input']>;
    provider_gt?: InputMaybe<Scalars['BigInt']['input']>;
    provider_gte?: InputMaybe<Scalars['BigInt']['input']>;
    provider_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    provider_lt?: InputMaybe<Scalars['BigInt']['input']>;
    provider_lte?: InputMaybe<Scalars['BigInt']['input']>;
    provider_not?: InputMaybe<Scalars['BigInt']['input']>;
    provider_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedTxHash?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    resolvedTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    resolvedTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    status?: InputMaybe<ConditionStatus>;
    status_in?: InputMaybe<Array<ConditionStatus>>;
    status_not?: InputMaybe<ConditionStatus>;
    status_not_in?: InputMaybe<Array<ConditionStatus>>;
    title?: InputMaybe<Scalars['String']['input']>;
    title_contains?: InputMaybe<Scalars['String']['input']>;
    title_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_gt?: InputMaybe<Scalars['String']['input']>;
    title_gte?: InputMaybe<Scalars['String']['input']>;
    title_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_lt?: InputMaybe<Scalars['String']['input']>;
    title_lte?: InputMaybe<Scalars['String']['input']>;
    title_not?: InputMaybe<Scalars['String']['input']>;
    title_not_contains?: InputMaybe<Scalars['String']['input']>;
    title_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    turnover?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    turnover_lt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_lte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds_contains?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds_contains_nocase?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds_not?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds_not_contains?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomeIds_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    wonOutcomes?: InputMaybe<Array<Scalars['String']['input']>>;
    wonOutcomes_?: InputMaybe<Outcome_Filter>;
    wonOutcomes_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    wonOutcomes_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    wonOutcomes_not?: InputMaybe<Array<Scalars['String']['input']>>;
    wonOutcomes_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    wonOutcomes_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
};
export declare enum Condition_OrderBy {
    UpdatedAt = "_updatedAt",
    WinningOutcomesCount = "_winningOutcomesCount",
    ConditionId = "conditionId",
    CreatedBlockNumber = "createdBlockNumber",
    CreatedBlockTimestamp = "createdBlockTimestamp",
    CreatedTxHash = "createdTxHash",
    Game = "game",
    Id = "id",
    InternalStartsAt = "internalStartsAt",
    Outcomes = "outcomes",
    OutcomesIds = "outcomesIds",
    Provider = "provider",
    ResolvedBlockNumber = "resolvedBlockNumber",
    ResolvedBlockTimestamp = "resolvedBlockTimestamp",
    ResolvedTxHash = "resolvedTxHash",
    Status = "status",
    Title = "title",
    Turnover = "turnover",
    WonOutcomeIds = "wonOutcomeIds",
    WonOutcomes = "wonOutcomes"
}
export type Country = {
    __typename?: 'Country';
    activeLeaguesEntityIds?: Maybe<Array<Scalars['String']['output']>>;
    hasActiveLeagues: Scalars['Boolean']['output'];
    id: Scalars['ID']['output'];
    leagues: Array<League>;
    name: Scalars['String']['output'];
    slug: Scalars['String']['output'];
    sport: Sport;
    turnover: Scalars['BigInt']['output'];
};
export type CountryLeaguesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<League_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<League_Filter>;
};
export type Country_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    activeLeaguesEntityIds?: InputMaybe<Array<Scalars['String']['input']>>;
    activeLeaguesEntityIds_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    activeLeaguesEntityIds_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    activeLeaguesEntityIds_not?: InputMaybe<Array<Scalars['String']['input']>>;
    activeLeaguesEntityIds_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    activeLeaguesEntityIds_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    and?: InputMaybe<Array<InputMaybe<Country_Filter>>>;
    hasActiveLeagues?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveLeagues_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    hasActiveLeagues_not?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveLeagues_not_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    leagues_?: InputMaybe<League_Filter>;
    name?: InputMaybe<Scalars['String']['input']>;
    name_contains?: InputMaybe<Scalars['String']['input']>;
    name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_gt?: InputMaybe<Scalars['String']['input']>;
    name_gte?: InputMaybe<Scalars['String']['input']>;
    name_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_lt?: InputMaybe<Scalars['String']['input']>;
    name_lte?: InputMaybe<Scalars['String']['input']>;
    name_not?: InputMaybe<Scalars['String']['input']>;
    name_not_contains?: InputMaybe<Scalars['String']['input']>;
    name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<Country_Filter>>>;
    slug?: InputMaybe<Scalars['String']['input']>;
    slug_contains?: InputMaybe<Scalars['String']['input']>;
    slug_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_gt?: InputMaybe<Scalars['String']['input']>;
    slug_gte?: InputMaybe<Scalars['String']['input']>;
    slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_lt?: InputMaybe<Scalars['String']['input']>;
    slug_lte?: InputMaybe<Scalars['String']['input']>;
    slug_not?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport?: InputMaybe<Scalars['String']['input']>;
    sport_?: InputMaybe<Sport_Filter>;
    sport_contains?: InputMaybe<Scalars['String']['input']>;
    sport_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_ends_with?: InputMaybe<Scalars['String']['input']>;
    sport_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_gt?: InputMaybe<Scalars['String']['input']>;
    sport_gte?: InputMaybe<Scalars['String']['input']>;
    sport_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sport_lt?: InputMaybe<Scalars['String']['input']>;
    sport_lte?: InputMaybe<Scalars['String']['input']>;
    sport_not?: InputMaybe<Scalars['String']['input']>;
    sport_not_contains?: InputMaybe<Scalars['String']['input']>;
    sport_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    sport_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sport_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    sport_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_starts_with?: InputMaybe<Scalars['String']['input']>;
    sport_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    turnover?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    turnover_lt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_lte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};
export declare enum Country_OrderBy {
    ActiveLeaguesEntityIds = "activeLeaguesEntityIds",
    HasActiveLeagues = "hasActiveLeagues",
    Id = "id",
    Leagues = "leagues",
    Name = "name",
    Slug = "slug",
    Sport = "sport",
    Turnover = "turnover"
}
export type Event = {
    __typename?: 'Event';
    blockNumber: Scalars['BigInt']['output'];
    blockTimestamp: Scalars['BigInt']['output'];
    conditionId?: Maybe<Scalars['String']['output']>;
    contractAddress: Scalars['String']['output'];
    gameId?: Maybe<Scalars['String']['output']>;
    gasPrice: Scalars['BigInt']['output'];
    gasUsed?: Maybe<Scalars['BigInt']['output']>;
    id: Scalars['ID']['output'];
    logIndex: Scalars['BigInt']['output'];
    name: EventName;
    sortOrder: Scalars['BigInt']['output'];
    transactionIndex: Scalars['BigInt']['output'];
    txHash: Scalars['String']['output'];
};
export declare enum EventName {
    ConditionCreated = "ConditionCreated",
    ConditionResolved = "ConditionResolved",
    ConditionStopped = "ConditionStopped",
    GameCanceled = "GameCanceled",
    GameUpdated = "GameUpdated",
    NewGame = "NewGame"
}
export type Event_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    and?: InputMaybe<Array<InputMaybe<Event_Filter>>>;
    blockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    blockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    blockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    blockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    blockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    blockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    conditionId?: InputMaybe<Scalars['String']['input']>;
    conditionId_contains?: InputMaybe<Scalars['String']['input']>;
    conditionId_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    conditionId_ends_with?: InputMaybe<Scalars['String']['input']>;
    conditionId_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    conditionId_gt?: InputMaybe<Scalars['String']['input']>;
    conditionId_gte?: InputMaybe<Scalars['String']['input']>;
    conditionId_in?: InputMaybe<Array<Scalars['String']['input']>>;
    conditionId_lt?: InputMaybe<Scalars['String']['input']>;
    conditionId_lte?: InputMaybe<Scalars['String']['input']>;
    conditionId_not?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_contains?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    conditionId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    conditionId_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    conditionId_starts_with?: InputMaybe<Scalars['String']['input']>;
    conditionId_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress?: InputMaybe<Scalars['String']['input']>;
    contractAddress_contains?: InputMaybe<Scalars['String']['input']>;
    contractAddress_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress_ends_with?: InputMaybe<Scalars['String']['input']>;
    contractAddress_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress_gt?: InputMaybe<Scalars['String']['input']>;
    contractAddress_gte?: InputMaybe<Scalars['String']['input']>;
    contractAddress_in?: InputMaybe<Array<Scalars['String']['input']>>;
    contractAddress_lt?: InputMaybe<Scalars['String']['input']>;
    contractAddress_lte?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_contains?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    contractAddress_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    contractAddress_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    contractAddress_starts_with?: InputMaybe<Scalars['String']['input']>;
    contractAddress_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId?: InputMaybe<Scalars['String']['input']>;
    gameId_contains?: InputMaybe<Scalars['String']['input']>;
    gameId_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId_ends_with?: InputMaybe<Scalars['String']['input']>;
    gameId_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId_gt?: InputMaybe<Scalars['String']['input']>;
    gameId_gte?: InputMaybe<Scalars['String']['input']>;
    gameId_in?: InputMaybe<Array<Scalars['String']['input']>>;
    gameId_lt?: InputMaybe<Scalars['String']['input']>;
    gameId_lte?: InputMaybe<Scalars['String']['input']>;
    gameId_not?: InputMaybe<Scalars['String']['input']>;
    gameId_not_contains?: InputMaybe<Scalars['String']['input']>;
    gameId_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    gameId_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    gameId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    gameId_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId_starts_with?: InputMaybe<Scalars['String']['input']>;
    gameId_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gasPrice?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    gasPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_not?: InputMaybe<Scalars['BigInt']['input']>;
    gasPrice_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    gasUsed?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_gt?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_gte?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    gasUsed_lt?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_lte?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_not?: InputMaybe<Scalars['BigInt']['input']>;
    gasUsed_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    logIndex?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_gt?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_gte?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    logIndex_lt?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_lte?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_not?: InputMaybe<Scalars['BigInt']['input']>;
    logIndex_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    name?: InputMaybe<EventName>;
    name_in?: InputMaybe<Array<EventName>>;
    name_not?: InputMaybe<EventName>;
    name_not_in?: InputMaybe<Array<EventName>>;
    or?: InputMaybe<Array<InputMaybe<Event_Filter>>>;
    sortOrder?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_gt?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_gte?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    sortOrder_lt?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_lte?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_not?: InputMaybe<Scalars['BigInt']['input']>;
    sortOrder_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    transactionIndex?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_gt?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_gte?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    transactionIndex_lt?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_lte?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_not?: InputMaybe<Scalars['BigInt']['input']>;
    transactionIndex_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    txHash?: InputMaybe<Scalars['String']['input']>;
    txHash_contains?: InputMaybe<Scalars['String']['input']>;
    txHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    txHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    txHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    txHash_gt?: InputMaybe<Scalars['String']['input']>;
    txHash_gte?: InputMaybe<Scalars['String']['input']>;
    txHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    txHash_lt?: InputMaybe<Scalars['String']['input']>;
    txHash_lte?: InputMaybe<Scalars['String']['input']>;
    txHash_not?: InputMaybe<Scalars['String']['input']>;
    txHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    txHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    txHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    txHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    txHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    txHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    txHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    txHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    txHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};
export declare enum Event_OrderBy {
    BlockNumber = "blockNumber",
    BlockTimestamp = "blockTimestamp",
    ConditionId = "conditionId",
    ContractAddress = "contractAddress",
    GameId = "gameId",
    GasPrice = "gasPrice",
    GasUsed = "gasUsed",
    Id = "id",
    LogIndex = "logIndex",
    Name = "name",
    SortOrder = "sortOrder",
    TransactionIndex = "transactionIndex",
    TxHash = "txHash"
}
export type Game = {
    __typename?: 'Game';
    _activeConditionsEntityIds?: Maybe<Array<Scalars['String']['output']>>;
    _canceledConditionsEntityIds?: Maybe<Array<Scalars['String']['output']>>;
    _resolvedConditionsEntityIds?: Maybe<Array<Scalars['String']['output']>>;
    _updatedAt: Scalars['BigInt']['output'];
    conditions: Array<Condition>;
    createdBlockNumber: Scalars['BigInt']['output'];
    createdBlockTimestamp: Scalars['BigInt']['output'];
    createdTxHash: Scalars['String']['output'];
    finishedBlockNumber?: Maybe<Scalars['BigInt']['output']>;
    finishedBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
    finishedTxHash?: Maybe<Scalars['String']['output']>;
    gameId: Scalars['BigInt']['output'];
    hasActiveConditions: Scalars['Boolean']['output'];
    /** Game Id */
    id: Scalars['ID']['output'];
    league: League;
    participants: Array<Participant>;
    provider: Scalars['BigInt']['output'];
    resolvedBlockNumber?: Maybe<Scalars['BigInt']['output']>;
    resolvedBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
    resolvedTxHash?: Maybe<Scalars['String']['output']>;
    shiftedBlockNumber?: Maybe<Scalars['BigInt']['output']>;
    shiftedBlockTimestamp?: Maybe<Scalars['BigInt']['output']>;
    shiftedTxHash?: Maybe<Scalars['String']['output']>;
    slug?: Maybe<Scalars['String']['output']>;
    sport: Sport;
    startsAt: Scalars['BigInt']['output'];
    status: GameStatus;
    title?: Maybe<Scalars['String']['output']>;
    turnover: Scalars['BigInt']['output'];
};
export type GameConditionsArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Condition_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Condition_Filter>;
};
export type GameParticipantsArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Participant_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Participant_Filter>;
};
export declare enum GameStatus {
    Canceled = "Canceled",
    Created = "Created",
    Finished = "Finished",
    Paused = "Paused",
    Resolved = "Resolved"
}
export type Game_Filter = {
    _activeConditionsEntityIds?: InputMaybe<Array<Scalars['String']['input']>>;
    _activeConditionsEntityIds_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _activeConditionsEntityIds_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    _activeConditionsEntityIds_not?: InputMaybe<Array<Scalars['String']['input']>>;
    _activeConditionsEntityIds_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _activeConditionsEntityIds_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds_not?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _canceledConditionsEntityIds_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    _resolvedConditionsEntityIds?: InputMaybe<Array<Scalars['String']['input']>>;
    _resolvedConditionsEntityIds_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _resolvedConditionsEntityIds_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    _resolvedConditionsEntityIds_not?: InputMaybe<Array<Scalars['String']['input']>>;
    _resolvedConditionsEntityIds_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    _resolvedConditionsEntityIds_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    _updatedAt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    _updatedAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    and?: InputMaybe<Array<InputMaybe<Game_Filter>>>;
    conditions_?: InputMaybe<Condition_Filter>;
    createdBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    createdBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    createdTxHash?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    createdTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    createdTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    createdTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    finishedBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    finishedBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    finishedBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    finishedBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    finishedTxHash?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    finishedTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    finishedTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    finishedTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    gameId?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_gt?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_gte?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    gameId_lt?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_lte?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_not?: InputMaybe<Scalars['BigInt']['input']>;
    gameId_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    hasActiveConditions?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveConditions_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    hasActiveConditions_not?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveConditions_not_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    league?: InputMaybe<Scalars['String']['input']>;
    league_?: InputMaybe<League_Filter>;
    league_contains?: InputMaybe<Scalars['String']['input']>;
    league_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    league_ends_with?: InputMaybe<Scalars['String']['input']>;
    league_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    league_gt?: InputMaybe<Scalars['String']['input']>;
    league_gte?: InputMaybe<Scalars['String']['input']>;
    league_in?: InputMaybe<Array<Scalars['String']['input']>>;
    league_lt?: InputMaybe<Scalars['String']['input']>;
    league_lte?: InputMaybe<Scalars['String']['input']>;
    league_not?: InputMaybe<Scalars['String']['input']>;
    league_not_contains?: InputMaybe<Scalars['String']['input']>;
    league_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    league_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    league_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    league_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    league_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    league_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    league_starts_with?: InputMaybe<Scalars['String']['input']>;
    league_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<Game_Filter>>>;
    participants_?: InputMaybe<Participant_Filter>;
    provider?: InputMaybe<Scalars['BigInt']['input']>;
    provider_gt?: InputMaybe<Scalars['BigInt']['input']>;
    provider_gte?: InputMaybe<Scalars['BigInt']['input']>;
    provider_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    provider_lt?: InputMaybe<Scalars['BigInt']['input']>;
    provider_lte?: InputMaybe<Scalars['BigInt']['input']>;
    provider_not?: InputMaybe<Scalars['BigInt']['input']>;
    provider_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    resolvedBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    resolvedTxHash?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    resolvedTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    resolvedTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    resolvedTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedBlockNumber?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    shiftedBlockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockNumber_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    shiftedBlockTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    shiftedBlockTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
    shiftedBlockTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    shiftedTxHash?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_contains?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_ends_with?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_gt?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_gte?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
    shiftedTxHash_lt?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_lte?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_contains?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    shiftedTxHash_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_starts_with?: InputMaybe<Scalars['String']['input']>;
    shiftedTxHash_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug?: InputMaybe<Scalars['String']['input']>;
    slug_contains?: InputMaybe<Scalars['String']['input']>;
    slug_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_gt?: InputMaybe<Scalars['String']['input']>;
    slug_gte?: InputMaybe<Scalars['String']['input']>;
    slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_lt?: InputMaybe<Scalars['String']['input']>;
    slug_lte?: InputMaybe<Scalars['String']['input']>;
    slug_not?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport?: InputMaybe<Scalars['String']['input']>;
    sport_?: InputMaybe<Sport_Filter>;
    sport_contains?: InputMaybe<Scalars['String']['input']>;
    sport_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_ends_with?: InputMaybe<Scalars['String']['input']>;
    sport_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_gt?: InputMaybe<Scalars['String']['input']>;
    sport_gte?: InputMaybe<Scalars['String']['input']>;
    sport_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sport_lt?: InputMaybe<Scalars['String']['input']>;
    sport_lte?: InputMaybe<Scalars['String']['input']>;
    sport_not?: InputMaybe<Scalars['String']['input']>;
    sport_not_contains?: InputMaybe<Scalars['String']['input']>;
    sport_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    sport_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sport_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    sport_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sport_starts_with?: InputMaybe<Scalars['String']['input']>;
    sport_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    startsAt?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    startsAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_not?: InputMaybe<Scalars['BigInt']['input']>;
    startsAt_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    status?: InputMaybe<GameStatus>;
    status_in?: InputMaybe<Array<GameStatus>>;
    status_not?: InputMaybe<GameStatus>;
    status_not_in?: InputMaybe<Array<GameStatus>>;
    title?: InputMaybe<Scalars['String']['input']>;
    title_contains?: InputMaybe<Scalars['String']['input']>;
    title_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_gt?: InputMaybe<Scalars['String']['input']>;
    title_gte?: InputMaybe<Scalars['String']['input']>;
    title_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_lt?: InputMaybe<Scalars['String']['input']>;
    title_lte?: InputMaybe<Scalars['String']['input']>;
    title_not?: InputMaybe<Scalars['String']['input']>;
    title_not_contains?: InputMaybe<Scalars['String']['input']>;
    title_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    turnover?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    turnover_lt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_lte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};
export declare enum Game_OrderBy {
    ActiveConditionsEntityIds = "_activeConditionsEntityIds",
    CanceledConditionsEntityIds = "_canceledConditionsEntityIds",
    ResolvedConditionsEntityIds = "_resolvedConditionsEntityIds",
    UpdatedAt = "_updatedAt",
    Conditions = "conditions",
    CreatedBlockNumber = "createdBlockNumber",
    CreatedBlockTimestamp = "createdBlockTimestamp",
    CreatedTxHash = "createdTxHash",
    FinishedBlockNumber = "finishedBlockNumber",
    FinishedBlockTimestamp = "finishedBlockTimestamp",
    FinishedTxHash = "finishedTxHash",
    GameId = "gameId",
    HasActiveConditions = "hasActiveConditions",
    Id = "id",
    League = "league",
    Participants = "participants",
    Provider = "provider",
    ResolvedBlockNumber = "resolvedBlockNumber",
    ResolvedBlockTimestamp = "resolvedBlockTimestamp",
    ResolvedTxHash = "resolvedTxHash",
    ShiftedBlockNumber = "shiftedBlockNumber",
    ShiftedBlockTimestamp = "shiftedBlockTimestamp",
    ShiftedTxHash = "shiftedTxHash",
    Slug = "slug",
    Sport = "sport",
    StartsAt = "startsAt",
    Status = "status",
    Title = "title",
    Turnover = "turnover"
}
export type League = {
    __typename?: 'League';
    activeGamesEntityIds?: Maybe<Array<Scalars['String']['output']>>;
    country: Country;
    games: Array<Game>;
    hasActiveGames: Scalars['Boolean']['output'];
    id: Scalars['ID']['output'];
    name: Scalars['String']['output'];
    slug: Scalars['String']['output'];
    turnover: Scalars['BigInt']['output'];
};
export type LeagueGamesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Game_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Game_Filter>;
};
export type League_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    activeGamesEntityIds?: InputMaybe<Array<Scalars['String']['input']>>;
    activeGamesEntityIds_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    activeGamesEntityIds_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    activeGamesEntityIds_not?: InputMaybe<Array<Scalars['String']['input']>>;
    activeGamesEntityIds_not_contains?: InputMaybe<Array<Scalars['String']['input']>>;
    activeGamesEntityIds_not_contains_nocase?: InputMaybe<Array<Scalars['String']['input']>>;
    and?: InputMaybe<Array<InputMaybe<League_Filter>>>;
    country?: InputMaybe<Scalars['String']['input']>;
    country_?: InputMaybe<Country_Filter>;
    country_contains?: InputMaybe<Scalars['String']['input']>;
    country_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    country_ends_with?: InputMaybe<Scalars['String']['input']>;
    country_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    country_gt?: InputMaybe<Scalars['String']['input']>;
    country_gte?: InputMaybe<Scalars['String']['input']>;
    country_in?: InputMaybe<Array<Scalars['String']['input']>>;
    country_lt?: InputMaybe<Scalars['String']['input']>;
    country_lte?: InputMaybe<Scalars['String']['input']>;
    country_not?: InputMaybe<Scalars['String']['input']>;
    country_not_contains?: InputMaybe<Scalars['String']['input']>;
    country_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    country_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    country_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    country_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    country_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    country_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    country_starts_with?: InputMaybe<Scalars['String']['input']>;
    country_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    games_?: InputMaybe<Game_Filter>;
    hasActiveGames?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveGames_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    hasActiveGames_not?: InputMaybe<Scalars['Boolean']['input']>;
    hasActiveGames_not_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    name?: InputMaybe<Scalars['String']['input']>;
    name_contains?: InputMaybe<Scalars['String']['input']>;
    name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_gt?: InputMaybe<Scalars['String']['input']>;
    name_gte?: InputMaybe<Scalars['String']['input']>;
    name_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_lt?: InputMaybe<Scalars['String']['input']>;
    name_lte?: InputMaybe<Scalars['String']['input']>;
    name_not?: InputMaybe<Scalars['String']['input']>;
    name_not_contains?: InputMaybe<Scalars['String']['input']>;
    name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<League_Filter>>>;
    slug?: InputMaybe<Scalars['String']['input']>;
    slug_contains?: InputMaybe<Scalars['String']['input']>;
    slug_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_gt?: InputMaybe<Scalars['String']['input']>;
    slug_gte?: InputMaybe<Scalars['String']['input']>;
    slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_lt?: InputMaybe<Scalars['String']['input']>;
    slug_lte?: InputMaybe<Scalars['String']['input']>;
    slug_not?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    turnover?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_gte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    turnover_lt?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_lte?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not?: InputMaybe<Scalars['BigInt']['input']>;
    turnover_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};
export declare enum League_OrderBy {
    ActiveGamesEntityIds = "activeGamesEntityIds",
    Country = "country",
    Games = "games",
    HasActiveGames = "hasActiveGames",
    Id = "id",
    Name = "name",
    Slug = "slug",
    Turnover = "turnover"
}
/** Defines the order direction, either ascending or descending */
export declare enum OrderDirection {
    Asc = "asc",
    Desc = "desc"
}
export type Outcome = {
    __typename?: 'Outcome';
    _updatedAt: Scalars['BigInt']['output'];
    condition: Condition;
    /** Condition entity Id (Condition Id) + outcome Id */
    id: Scalars['ID']['output'];
    outcomeId: Scalars['BigInt']['output'];
    result?: Maybe<SelectionResult>;
    sortOrder: Scalars['Int']['output'];
    title?: Maybe<Scalars['String']['output']>;
};
export type Outcome_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    _updatedAt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    _updatedAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not?: InputMaybe<Scalars['BigInt']['input']>;
    _updatedAt_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    and?: InputMaybe<Array<InputMaybe<Outcome_Filter>>>;
    condition?: InputMaybe<Scalars['String']['input']>;
    condition_?: InputMaybe<Condition_Filter>;
    condition_contains?: InputMaybe<Scalars['String']['input']>;
    condition_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    condition_ends_with?: InputMaybe<Scalars['String']['input']>;
    condition_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    condition_gt?: InputMaybe<Scalars['String']['input']>;
    condition_gte?: InputMaybe<Scalars['String']['input']>;
    condition_in?: InputMaybe<Array<Scalars['String']['input']>>;
    condition_lt?: InputMaybe<Scalars['String']['input']>;
    condition_lte?: InputMaybe<Scalars['String']['input']>;
    condition_not?: InputMaybe<Scalars['String']['input']>;
    condition_not_contains?: InputMaybe<Scalars['String']['input']>;
    condition_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    condition_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    condition_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    condition_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    condition_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    condition_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    condition_starts_with?: InputMaybe<Scalars['String']['input']>;
    condition_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    or?: InputMaybe<Array<InputMaybe<Outcome_Filter>>>;
    outcomeId?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_gt?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_gte?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    outcomeId_lt?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_lte?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_not?: InputMaybe<Scalars['BigInt']['input']>;
    outcomeId_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    result?: InputMaybe<SelectionResult>;
    result_in?: InputMaybe<Array<SelectionResult>>;
    result_not?: InputMaybe<SelectionResult>;
    result_not_in?: InputMaybe<Array<SelectionResult>>;
    sortOrder?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_gt?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_gte?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_in?: InputMaybe<Array<Scalars['Int']['input']>>;
    sortOrder_lt?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_lte?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_not?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;
    title?: InputMaybe<Scalars['String']['input']>;
    title_contains?: InputMaybe<Scalars['String']['input']>;
    title_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_gt?: InputMaybe<Scalars['String']['input']>;
    title_gte?: InputMaybe<Scalars['String']['input']>;
    title_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_lt?: InputMaybe<Scalars['String']['input']>;
    title_lte?: InputMaybe<Scalars['String']['input']>;
    title_not?: InputMaybe<Scalars['String']['input']>;
    title_not_contains?: InputMaybe<Scalars['String']['input']>;
    title_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    title_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    title_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    title_starts_with?: InputMaybe<Scalars['String']['input']>;
    title_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};
export declare enum Outcome_OrderBy {
    UpdatedAt = "_updatedAt",
    Condition = "condition",
    Id = "id",
    OutcomeId = "outcomeId",
    Result = "result",
    SortOrder = "sortOrder",
    Title = "title"
}
export type Participant = {
    __typename?: 'Participant';
    game: Game;
    /** Game entity Id (LP Contract address + Game Id) + participant sortOrder */
    id: Scalars['ID']['output'];
    image?: Maybe<Scalars['String']['output']>;
    name: Scalars['String']['output'];
    sortOrder: Scalars['Int']['output'];
};
export type Participant_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    and?: InputMaybe<Array<InputMaybe<Participant_Filter>>>;
    game?: InputMaybe<Scalars['String']['input']>;
    game_?: InputMaybe<Game_Filter>;
    game_contains?: InputMaybe<Scalars['String']['input']>;
    game_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    game_ends_with?: InputMaybe<Scalars['String']['input']>;
    game_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_gt?: InputMaybe<Scalars['String']['input']>;
    game_gte?: InputMaybe<Scalars['String']['input']>;
    game_in?: InputMaybe<Array<Scalars['String']['input']>>;
    game_lt?: InputMaybe<Scalars['String']['input']>;
    game_lte?: InputMaybe<Scalars['String']['input']>;
    game_not?: InputMaybe<Scalars['String']['input']>;
    game_not_contains?: InputMaybe<Scalars['String']['input']>;
    game_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    game_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    game_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    game_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    game_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    game_starts_with?: InputMaybe<Scalars['String']['input']>;
    game_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    image?: InputMaybe<Scalars['String']['input']>;
    image_contains?: InputMaybe<Scalars['String']['input']>;
    image_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    image_ends_with?: InputMaybe<Scalars['String']['input']>;
    image_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    image_gt?: InputMaybe<Scalars['String']['input']>;
    image_gte?: InputMaybe<Scalars['String']['input']>;
    image_in?: InputMaybe<Array<Scalars['String']['input']>>;
    image_lt?: InputMaybe<Scalars['String']['input']>;
    image_lte?: InputMaybe<Scalars['String']['input']>;
    image_not?: InputMaybe<Scalars['String']['input']>;
    image_not_contains?: InputMaybe<Scalars['String']['input']>;
    image_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    image_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    image_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    image_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    image_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    image_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    image_starts_with?: InputMaybe<Scalars['String']['input']>;
    image_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    name_contains?: InputMaybe<Scalars['String']['input']>;
    name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_gt?: InputMaybe<Scalars['String']['input']>;
    name_gte?: InputMaybe<Scalars['String']['input']>;
    name_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_lt?: InputMaybe<Scalars['String']['input']>;
    name_lte?: InputMaybe<Scalars['String']['input']>;
    name_not?: InputMaybe<Scalars['String']['input']>;
    name_not_contains?: InputMaybe<Scalars['String']['input']>;
    name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<Participant_Filter>>>;
    sortOrder?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_gt?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_gte?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_in?: InputMaybe<Array<Scalars['Int']['input']>>;
    sortOrder_lt?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_lte?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_not?: InputMaybe<Scalars['Int']['input']>;
    sortOrder_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;
};
export declare enum Participant_OrderBy {
    Game = "game",
    Id = "id",
    Image = "image",
    Name = "name",
    SortOrder = "sortOrder"
}
export type Query = {
    __typename?: 'Query';
    /** Access to subgraph metadata */
    _meta?: Maybe<_Meta_>;
    condition?: Maybe<Condition>;
    conditions: Array<Condition>;
    countries: Array<Country>;
    country?: Maybe<Country>;
    event?: Maybe<Event>;
    events: Array<Event>;
    game?: Maybe<Game>;
    games: Array<Game>;
    league?: Maybe<League>;
    leagues: Array<League>;
    outcome?: Maybe<Outcome>;
    outcomes: Array<Outcome>;
    participant?: Maybe<Participant>;
    participants: Array<Participant>;
    sport?: Maybe<Sport>;
    sportHub?: Maybe<SportHub>;
    sportHubs: Array<SportHub>;
    sports: Array<Sport>;
};
export type Query_MetaArgs = {
    block?: InputMaybe<Block_Height>;
};
export type QueryConditionArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryConditionsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Condition_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Condition_Filter>;
};
export type QueryCountriesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Country_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Country_Filter>;
};
export type QueryCountryArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryEventArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryEventsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Event_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Event_Filter>;
};
export type QueryGameArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryGamesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Game_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Game_Filter>;
};
export type QueryLeagueArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryLeaguesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<League_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<League_Filter>;
};
export type QueryOutcomeArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryOutcomesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Outcome_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Outcome_Filter>;
};
export type QueryParticipantArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QueryParticipantsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Participant_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Participant_Filter>;
};
export type QuerySportArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QuerySportHubArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type QuerySportHubsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<SportHub_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<SportHub_Filter>;
};
export type QuerySportsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Sport_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Sport_Filter>;
};
export declare enum SelectionResult {
    Lost = "Lost",
    Won = "Won"
}
export type Sport = {
    __typename?: 'Sport';
    countries: Array<Country>;
    games: Array<Game>;
    id: Scalars['ID']['output'];
    name: Scalars['String']['output'];
    slug: Scalars['String']['output'];
    sportId: Scalars['BigInt']['output'];
    sporthub: SportHub;
};
export type SportCountriesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Country_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Country_Filter>;
};
export type SportGamesArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Game_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Game_Filter>;
};
export type SportHub = {
    __typename?: 'SportHub';
    id: Scalars['ID']['output'];
    name: Scalars['String']['output'];
    slug: Scalars['String']['output'];
    sports?: Maybe<Array<Sport>>;
};
export type SportHubSportsArgs = {
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Sport_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    where?: InputMaybe<Sport_Filter>;
};
export type SportHub_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    and?: InputMaybe<Array<InputMaybe<SportHub_Filter>>>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    name?: InputMaybe<Scalars['String']['input']>;
    name_contains?: InputMaybe<Scalars['String']['input']>;
    name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_gt?: InputMaybe<Scalars['String']['input']>;
    name_gte?: InputMaybe<Scalars['String']['input']>;
    name_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_lt?: InputMaybe<Scalars['String']['input']>;
    name_lte?: InputMaybe<Scalars['String']['input']>;
    name_not?: InputMaybe<Scalars['String']['input']>;
    name_not_contains?: InputMaybe<Scalars['String']['input']>;
    name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<SportHub_Filter>>>;
    slug?: InputMaybe<Scalars['String']['input']>;
    slug_contains?: InputMaybe<Scalars['String']['input']>;
    slug_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_gt?: InputMaybe<Scalars['String']['input']>;
    slug_gte?: InputMaybe<Scalars['String']['input']>;
    slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_lt?: InputMaybe<Scalars['String']['input']>;
    slug_lte?: InputMaybe<Scalars['String']['input']>;
    slug_not?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sports_?: InputMaybe<Sport_Filter>;
};
export declare enum SportHub_OrderBy {
    Id = "id",
    Name = "name",
    Slug = "slug",
    Sports = "sports"
}
export type Sport_Filter = {
    /** Filter for the block changed event. */
    _change_block?: InputMaybe<BlockChangedFilter>;
    and?: InputMaybe<Array<InputMaybe<Sport_Filter>>>;
    countries_?: InputMaybe<Country_Filter>;
    games_?: InputMaybe<Game_Filter>;
    id?: InputMaybe<Scalars['ID']['input']>;
    id_gt?: InputMaybe<Scalars['ID']['input']>;
    id_gte?: InputMaybe<Scalars['ID']['input']>;
    id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    id_lt?: InputMaybe<Scalars['ID']['input']>;
    id_lte?: InputMaybe<Scalars['ID']['input']>;
    id_not?: InputMaybe<Scalars['ID']['input']>;
    id_not_in?: InputMaybe<Array<Scalars['ID']['input']>>;
    name?: InputMaybe<Scalars['String']['input']>;
    name_contains?: InputMaybe<Scalars['String']['input']>;
    name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_gt?: InputMaybe<Scalars['String']['input']>;
    name_gte?: InputMaybe<Scalars['String']['input']>;
    name_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_lt?: InputMaybe<Scalars['String']['input']>;
    name_lte?: InputMaybe<Scalars['String']['input']>;
    name_not?: InputMaybe<Scalars['String']['input']>;
    name_not_contains?: InputMaybe<Scalars['String']['input']>;
    name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    name_starts_with?: InputMaybe<Scalars['String']['input']>;
    name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    or?: InputMaybe<Array<InputMaybe<Sport_Filter>>>;
    slug?: InputMaybe<Scalars['String']['input']>;
    slug_contains?: InputMaybe<Scalars['String']['input']>;
    slug_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_gt?: InputMaybe<Scalars['String']['input']>;
    slug_gte?: InputMaybe<Scalars['String']['input']>;
    slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_lt?: InputMaybe<Scalars['String']['input']>;
    slug_lte?: InputMaybe<Scalars['String']['input']>;
    slug_not?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains?: InputMaybe<Scalars['String']['input']>;
    slug_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    slug_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with?: InputMaybe<Scalars['String']['input']>;
    slug_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sportId?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_gt?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_gte?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    sportId_lt?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_lte?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_not?: InputMaybe<Scalars['BigInt']['input']>;
    sportId_not_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
    sporthub?: InputMaybe<Scalars['String']['input']>;
    sporthub_?: InputMaybe<SportHub_Filter>;
    sporthub_contains?: InputMaybe<Scalars['String']['input']>;
    sporthub_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sporthub_ends_with?: InputMaybe<Scalars['String']['input']>;
    sporthub_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sporthub_gt?: InputMaybe<Scalars['String']['input']>;
    sporthub_gte?: InputMaybe<Scalars['String']['input']>;
    sporthub_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sporthub_lt?: InputMaybe<Scalars['String']['input']>;
    sporthub_lte?: InputMaybe<Scalars['String']['input']>;
    sporthub_not?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_contains?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_ends_with?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_in?: InputMaybe<Array<Scalars['String']['input']>>;
    sporthub_not_starts_with?: InputMaybe<Scalars['String']['input']>;
    sporthub_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
    sporthub_starts_with?: InputMaybe<Scalars['String']['input']>;
    sporthub_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};
export declare enum Sport_OrderBy {
    Countries = "countries",
    Games = "games",
    Id = "id",
    Name = "name",
    Slug = "slug",
    SportId = "sportId",
    Sporthub = "sporthub"
}
export type Subscription = {
    __typename?: 'Subscription';
    /** Access to subgraph metadata */
    _meta?: Maybe<_Meta_>;
    condition?: Maybe<Condition>;
    conditions: Array<Condition>;
    countries: Array<Country>;
    country?: Maybe<Country>;
    event?: Maybe<Event>;
    events: Array<Event>;
    game?: Maybe<Game>;
    games: Array<Game>;
    league?: Maybe<League>;
    leagues: Array<League>;
    outcome?: Maybe<Outcome>;
    outcomes: Array<Outcome>;
    participant?: Maybe<Participant>;
    participants: Array<Participant>;
    sport?: Maybe<Sport>;
    sportHub?: Maybe<SportHub>;
    sportHubs: Array<SportHub>;
    sports: Array<Sport>;
};
export type Subscription_MetaArgs = {
    block?: InputMaybe<Block_Height>;
};
export type SubscriptionConditionArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionConditionsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Condition_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Condition_Filter>;
};
export type SubscriptionCountriesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Country_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Country_Filter>;
};
export type SubscriptionCountryArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionEventArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionEventsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Event_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Event_Filter>;
};
export type SubscriptionGameArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionGamesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Game_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Game_Filter>;
};
export type SubscriptionLeagueArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionLeaguesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<League_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<League_Filter>;
};
export type SubscriptionOutcomeArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionOutcomesArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Outcome_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Outcome_Filter>;
};
export type SubscriptionParticipantArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionParticipantsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Participant_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Participant_Filter>;
};
export type SubscriptionSportArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionSportHubArgs = {
    block?: InputMaybe<Block_Height>;
    id: Scalars['ID']['input'];
    subgraphError?: _SubgraphErrorPolicy_;
};
export type SubscriptionSportHubsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<SportHub_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<SportHub_Filter>;
};
export type SubscriptionSportsArgs = {
    block?: InputMaybe<Block_Height>;
    first?: InputMaybe<Scalars['Int']['input']>;
    orderBy?: InputMaybe<Sport_OrderBy>;
    orderDirection?: InputMaybe<OrderDirection>;
    skip?: InputMaybe<Scalars['Int']['input']>;
    subgraphError?: _SubgraphErrorPolicy_;
    where?: InputMaybe<Sport_Filter>;
};
export type _Block_ = {
    __typename?: '_Block_';
    /** The hash of the block */
    hash?: Maybe<Scalars['Bytes']['output']>;
    /** The block number */
    number: Scalars['Int']['output'];
    /** Integer representation of the timestamp stored in blocks for the chain */
    timestamp?: Maybe<Scalars['Int']['output']>;
};
/** The type for the top-level _meta field */
export type _Meta_ = {
    __typename?: '_Meta_';
    /**
     * Information about a specific subgraph block. The hash of the block
     * will be null if the _meta field has a block constraint that asks for
     * a block number. It will be filled if the _meta field has no block constraint
     * and therefore asks for the latest  block
     *
     */
    block: _Block_;
    /** The deployment ID */
    deployment: Scalars['String']['output'];
    /** If `true`, the subgraph encountered indexing errors at some past block */
    hasIndexingErrors: Scalars['Boolean']['output'];
};
export declare enum _SubgraphErrorPolicy_ {
    /** Data will be returned even if the subgraph has indexing errors */
    Allow = "allow",
    /** If the subgraph has indexing errors, data will be omitted. The default. */
    Deny = "deny"
}
