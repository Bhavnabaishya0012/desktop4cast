import * as Types from './types';
import * as Apollo from '@apollo/client';
export type NavigationQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']['input']>;
    sportFilter?: Types.InputMaybe<Types.Sport_Filter>;
    gameFilter?: Types.InputMaybe<Types.Game_Filter>;
    withGameCount: Types.Scalars['Boolean']['input'];
}>;
export type NavigationQuery = {
    __typename?: 'Query';
    sports: Array<{
        __typename?: 'Sport';
        id: string;
        slug: string;
        name: string;
        sportId: string;
        countries: Array<{
            __typename?: 'Country';
            id: string;
            slug: string;
            name: string;
            leagues: Array<{
                __typename?: 'League';
                id: string;
                slug: string;
                name: string;
                games?: Array<{
                    __typename?: 'Game';
                    id: string;
                }>;
            }>;
        }>;
    }>;
};
export declare const NavigationDocument: Apollo.DocumentNode;
export type NavigationQueryResult = Apollo.QueryResult<NavigationQuery, NavigationQueryVariables>;
