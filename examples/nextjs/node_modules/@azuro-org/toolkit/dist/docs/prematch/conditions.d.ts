import * as Types from './types';
import * as Apollo from '@apollo/client';
export type PrematchConditionsQueryVariables = Types.Exact<{
    where: Types.Condition_Filter;
    orderBy?: Types.InputMaybe<Types.Condition_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
}>;
export type PrematchConditionsQuery = {
    __typename?: 'Query';
    conditions: Array<{
        __typename?: 'Condition';
        wonOutcomeIds?: Array<string> | null;
        id: string;
        conditionId: string;
        status: Types.ConditionStatus;
        title?: string | null;
        isExpressForbidden: boolean;
        margin: string;
        outcomes: Array<{
            __typename?: 'Outcome';
            title?: string | null;
            outcomeId: string;
            odds: string;
        }>;
        core: {
            __typename?: 'CoreContract';
            address: string;
            liquidityPool: {
                __typename?: 'LiquidityPoolContract';
                address: string;
            };
        };
        game: {
            __typename?: 'Game';
            gameId: string;
            sport: {
                __typename?: 'Sport';
                sportId: string;
            };
        };
    }>;
};
export declare const PrematchConditionsDocument: Apollo.DocumentNode;
export type PrematchConditionsQueryResult = Apollo.QueryResult<PrematchConditionsQuery, PrematchConditionsQueryVariables>;
