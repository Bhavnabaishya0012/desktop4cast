declare const _default: readonly [{
    readonly inputs: readonly [];
    readonly name: "AlreadyResolved";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "BetAlreadyClaimed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "BetExpired";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "IncorrectChainId";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "InsufficientContractBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "InvalidSignature";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OnlyBetOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OnlyFreeBetOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OnlyManager";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SmallMinOdds";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "newAffiliate";
        readonly type: "address";
    }];
    readonly name: "AffiliateChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "core";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "bettor";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "freeBetId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "BettorWin";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint8";
        readonly name: "version";
        readonly type: "uint8";
    }];
    readonly name: "Initialized";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newLp";
        readonly type: "address";
    }];
    readonly name: "LpChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "newManager";
        readonly type: "address";
    }];
    readonly name: "ManagerChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "freeBetId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "core";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "bettor";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "azuroBetId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint128";
        readonly name: "amount";
        readonly type: "uint128";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "minOdds";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "expiresAt";
        readonly type: "uint64";
    }];
    readonly name: "NewBet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "azuroBetId";
        readonly type: "uint256[]";
    }];
    readonly name: "PayoutsResolved";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "affiliate";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "freeBetId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "minOdds";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "expiresAt";
            readonly type: "uint64";
        }];
        readonly internalType: "struct IFreeBet.FreeBetData";
        readonly name: "freeBetData";
        readonly type: "tuple";
    }, {
        readonly internalType: "bytes";
        readonly name: "signature";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "core";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "conditionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint64";
        readonly name: "outcomeId";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "deadline";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "minOdds";
        readonly type: "uint64";
    }];
    readonly name: "bet";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "azuroBetId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "checkOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "freeBets";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "core";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "azuroBetId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint128";
        readonly name: "amount";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "payout";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "lpAddress";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "affiliate_";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "manager_";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "lockedReserve";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "lp";
    readonly outputs: readonly [{
        readonly internalType: "contract ILP";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "manager";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "freeBetIds";
        readonly type: "uint256[]";
    }];
    readonly name: "resolvePayout";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "affiliate_";
        readonly type: "address";
    }];
    readonly name: "setAffiliate";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "lp_";
        readonly type: "address";
    }];
    readonly name: "setLp";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "manager_";
        readonly type: "address";
    }];
    readonly name: "setManager";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "token";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "freeBetId";
        readonly type: "uint256";
    }];
    readonly name: "withdrawPayout";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "withdrawReserve";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly stateMutability: "payable";
    readonly type: "receive";
}];
export default _default;
