import * as Types from './types';
import * as Apollo from '@apollo/client';
export type PrematchBetsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']['input']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']['input']>;
    where: Types.Bet_Filter;
    orderBy?: Types.InputMaybe<Types.Bet_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
}>;
export type PrematchBetsQuery = {
    __typename?: 'Query';
    bets: Array<{
        __typename?: 'Bet';
        id: string;
        amount: string;
        status: Types.BetStatus;
        potentialPayout: string;
        payout?: string | null;
        result?: Types.BetResult | null;
        isRedeemed: boolean;
        isRedeemable: boolean;
        odds: string;
        settledOdds?: string | null;
        affiliate?: string | null;
        tokenId: string;
        createdAt: string;
        txHash: string;
        core: {
            __typename?: 'CoreContract';
            address: string;
            liquidityPool: {
                __typename?: 'LiquidityPoolContract';
                address: string;
            };
        };
        selections: Array<{
            __typename?: 'Selection';
            odds: string;
            result?: Types.SelectionResult | null;
            outcome: {
                __typename?: 'Outcome';
                outcomeId: string;
                title?: string | null;
                condition: {
                    __typename?: 'Condition';
                    conditionId: string;
                    status: Types.ConditionStatus;
                    title?: string | null;
                    game: {
                        __typename?: 'Game';
                        id: string;
                        gameId: string;
                        title?: string | null;
                        startsAt: string;
                        status: Types.GameStatus;
                        sport: {
                            __typename?: 'Sport';
                            sportId: string;
                            slug: string;
                            name: string;
                        };
                        league: {
                            __typename?: 'League';
                            slug: string;
                            name: string;
                            country: {
                                __typename?: 'Country';
                                slug: string;
                                name: string;
                            };
                        };
                        participants: Array<{
                            __typename?: 'Participant';
                            image?: string | null;
                            name: string;
                        }>;
                    };
                };
            };
        }>;
        freebet?: {
            __typename?: 'Freebet';
            freebetId: string;
            contractAddress: string;
        } | null;
    }>;
};
export declare const PrematchBetsDocument: Apollo.DocumentNode;
export type PrematchBetsQueryResult = Apollo.QueryResult<PrematchBetsQuery, PrematchBetsQueryVariables>;
