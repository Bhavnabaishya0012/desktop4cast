import * as Types from './types';
import * as Apollo from '@apollo/client';
export type GameBetsQueryVariables = Types.Exact<{
    gameId: Types.Scalars['String']['input'];
    actor?: Types.InputMaybe<Types.Scalars['String']['input']>;
}>;
export type GameBetsQuery = {
    __typename?: 'Query';
    bets: Array<{
        __typename?: 'Bet';
        rawAmount: string;
        rawPotentialPayout: string;
        result?: Types.BetResult | null;
        selections: Array<{
            __typename?: 'Selection';
            rawOdds: string;
            outcome: {
                __typename?: 'Outcome';
                outcomeId: string;
                condition: {
                    __typename?: 'Condition';
                    conditionId: string;
                    game: {
                        __typename?: 'Game';
                        gameId: string;
                    };
                };
            };
        }>;
        freebet?: {
            __typename?: 'Freebet';
            id: string;
        } | null;
    }>;
    liveBets: Array<{
        __typename?: 'LiveBet';
        rawAmount: string;
        rawPotentialPayout: string;
        result?: Types.BetResult | null;
        selections: Array<{
            __typename?: 'LiveSelection';
            outcome: {
                __typename?: 'LiveOutcome';
                outcomeId: string;
                condition: {
                    __typename?: 'LiveCondition';
                    conditionId: string;
                };
            };
        }>;
    }>;
};
export declare const GameBetsDocument: Apollo.DocumentNode;
export type GameBetsQueryResult = Apollo.QueryResult<GameBetsQuery, GameBetsQueryVariables>;
