import * as Types from './types';
import * as Apollo from '@apollo/client';
export type PrematchConditionQueryVariables = Types.Exact<{
    id: Types.Scalars['String']['input'];
}>;
export type PrematchConditionQuery = {
    __typename?: 'Query';
    condition?: {
        __typename?: 'Condition';
        id: string;
        conditionId: string;
        status: Types.ConditionStatus;
        title?: string | null;
        isExpressForbidden: boolean;
        margin: string;
        outcomes: Array<{
            __typename?: 'Outcome';
            title?: string | null;
            outcomeId: string;
            odds: string;
        }>;
        core: {
            __typename?: 'CoreContract';
            address: string;
            liquidityPool: {
                __typename?: 'LiquidityPoolContract';
                address: string;
            };
        };
        game: {
            __typename?: 'Game';
            gameId: string;
            sport: {
                __typename?: 'Sport';
                sportId: string;
            };
        };
    } | null;
};
export declare const PrematchConditionDocument: Apollo.DocumentNode;
export type PrematchConditionQueryResult = Apollo.QueryResult<PrematchConditionQuery, PrematchConditionQueryVariables>;
