import { type Address, type Hex } from 'viem';
import { type Selection } from '../../global';
import { type ChainId } from '../../config';
export type DeBridgeCreateTxResponse = {
    orderId: Hex;
    estimation: {
        srcChainTokenIn: {
            address: Address;
            name: string;
            symbol: string;
            decimals: number;
            amount: string;
            approximateOperatingExpense: string;
            mutatedWithOperatingExpense: boolean;
        };
        srcChainTokenOut: {
            address: Address;
            name: string;
            symbol: string;
            decimals: number;
            amount: string;
            maxRefundAmount: string;
        };
        dstChainTokenOut: {
            address: Address;
            name: string;
            symbol: string;
            decimals: number;
            amount: string;
            recommendedAmount: string;
            withoutAdditionalTakerRewardsAmount: string;
            maxTheoreticalAmount: string;
        };
        recommendedSlippage: number;
        costsDetails: [string];
    };
    tx: {
        to: Address;
        data: Hex;
        value: bigint;
    };
    order: {
        approximateFulfillmentDelay: number;
    };
    prependedOperatingExpenseCost: string;
    fixFee: string;
    userPoints: number;
    integratorPoints: number;
};
type Props = {
    account: Address;
    betAmount: string;
    dstChainId: ChainId;
    srcChainId: number;
    srcChainTokenIn: string;
    selections: Selection[];
    totalOdds: number;
    slippage: number;
    affiliate: Address;
    referralCode: number;
    deadline?: number;
};
export declare const DE_BRIDGE_DEFAULT_DEADLINE = 300;
export declare const createDeBridgeBet: (props: Props) => Promise<DeBridgeCreateTxResponse | null>;
export {};
