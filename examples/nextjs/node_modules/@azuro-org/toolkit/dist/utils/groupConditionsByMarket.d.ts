import type { ConditionStatus } from '../docs/prematch/types';
import { type PrematchConditionsQuery } from '../docs/prematch/conditions';
import { type LiveConditionsQuery } from '../docs/live/conditions';
import type { Selection } from '../global';
export type ConditionsQuery = PrematchConditionsQuery | LiveConditionsQuery;
export type MarketOutcome = {
    selectionName: string;
    odds?: number;
    lpAddress: string;
    coreAddress: string;
    status: ConditionStatus;
    gameId: string;
    isExpressForbidden: boolean;
    margin?: string;
    isWon?: boolean;
} & Selection;
export type Market = {
    marketKey: string;
    name: string;
    description: string;
    outcomeRows: MarketOutcome[][];
};
export type GameMarkets = Market[];
export declare const groupConditionsByMarket: (conditions: ConditionsQuery["conditions"]) => GameMarkets;
